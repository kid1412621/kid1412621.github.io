@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --c-brand: #3eaf7c;
  --c-brand-light: #4abf8a;
}

nav img {
  vertical-align: middle;
}

p img {
  margin: 0px auto;
}

.prose hr {
  border-top: 1px solid #e5e7eb;
}

.link {
  color: var(--c-brand);
}

.link:hover {
  color: var(--c-brand-light);
}

.header-anchor {
  display: none;
}

/**
 * prism.js tomorrow night eighties for JavaScript, CoffeeScript, CSS and HTML.
 * Based on https://github.com/chriskempson/tomorrow-theme
 *
 * @author Rose Pritchard
 */
.token.comment,
.token.block-comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #999;
}

.token.punctuation {
  color: #ccc;
}

.token.tag,
.token.attr-name,
.token.namespace,
.token.deleted {
  color: #e2777a;
}

.token.function-name {
  color: #6196cc;
}

.token.boolean,
.token.number,
.token.function {
  color: #f08d49;
}

.token.property,
.token.class-name,
.token.constant,
.token.symbol {
  color: #f8c555;
}

.token.selector,
.token.important,
.token.atrule,
.token.keyword,
.token.builtin {
  color: #cc99cd;
}

.token.string,
.token.char,
.token.attr-value,
.token.regex,
.token.variable {
  color: #7ec699;
}

.token.operator,
.token.entity,
.token.url {
  color: #67cdcc;
}

.token.important,
.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}

.token.entity {
  cursor: help;
}

.token.inserted {
  color: #67cdcc;
}

button.copy {
  display: none;
}

span.lang {
  position: absolute;
  right: 0.5em;
  font-size: 0.75em;
  color: #999;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    'Liberation Mono', 'Courier New', monospace;
}

/* overwrite code style */

p code,
li code {
  border-radius: 4px;
  padding: 3px 6px;
  font-weight: 500 !important;
  color: var(--c-brand-light) !important;
  background-color: #f6f6f7;
  transition: color 0.5s, background-color 0.5s;
}

.dark p code,
.dark li code {
  color: #c9def1 !important;
  background-color: #313136;
}

p code::before,
li code::before {
  content: "" !important;
}

p code::after,
li code::after {
  content: "" !important;
}